version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:80"
    depends_on:
      - db
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DB_CONNECTION_STRING=Server=db;Database=VietnamBusiness;User Id=sa;Password=${SQL_PASSWORD:-YourStrong@Passw0rd};MultipleActiveResultSets=true;TrustServerCertificate=True
      - ENABLE_CORS=${ENABLE_CORS:-true}
      - CORS_ORIGINS=${CORS_ORIGINS:-https://example.com}
    restart: unless-stopped
    networks:
      - vietnam-business-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/swagger"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SQL_PASSWORD:-YourStrong@Passw0rd}
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - mssql-data:/var/opt/mssql
    restart: unless-stopped
    networks:
      - vietnam-business-network
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "$${SA_PASSWORD}" -Q "SELECT 1" -b -o /dev/null
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

networks:
  vietnam-business-network:
    driver: bridge

volumes:
  mssql-data:
    driver: local